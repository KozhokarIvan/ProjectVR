// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectVR.DataAccess;

#nullable disable

namespace ProjectVR.DataAccess.Migrations
{
    [DbContext(typeof(ProjectVRDbContext))]
    partial class ProjectVRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectVR.DataAccess.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("games", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Beat Saber"
                        },
                        new
                        {
                            Id = 2,
                            Name = "VR Chat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Skyrim VR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fallout 4 VR"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Half-Life: Alyx"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Blade and Sorcery"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PAYDAY 2 VR"
                        },
                        new
                        {
                            Id = 8,
                            Name = "The Forest"
                        });
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OwnerGuid")
                        .HasColumnType("uuid");

                    b.Property<int?>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("OwnerGuid");

                    b.ToTable("usergames", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 3,
                            IsFavorite = true,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 2,
                            GameId = 4,
                            IsFavorite = true,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 4,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            Rating = 95
                        },
                        new
                        {
                            Id = 5,
                            GameId = 3,
                            IsFavorite = false,
                            OwnerGuid = new Guid("59cd92da-6b8f-40b3-ab08-a3cb1cab1532"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 6,
                            GameId = 4,
                            IsFavorite = true,
                            OwnerGuid = new Guid("a028785e-4dc5-434f-8cd1-828cbc2f1169"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 7,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("86628830-8827-4a4d-b7ed-fb5fff025f1a"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 8,
                            GameId = 8,
                            IsFavorite = true,
                            OwnerGuid = new Guid("5a560c3a-6d49-4442-a372-a51e99a27f74"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 9,
                            GameId = 3,
                            IsFavorite = true,
                            OwnerGuid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            Rating = 98
                        },
                        new
                        {
                            Id = 10,
                            GameId = 4,
                            IsFavorite = true,
                            OwnerGuid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            Rating = 87
                        },
                        new
                        {
                            Id = 11,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            Rating = 90
                        },
                        new
                        {
                            Id = 12,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            Rating = 65
                        },
                        new
                        {
                            Id = 13,
                            GameId = 3,
                            IsFavorite = true,
                            OwnerGuid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 14,
                            GameId = 4,
                            IsFavorite = true,
                            OwnerGuid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 15,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 16,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            Rating = 77
                        },
                        new
                        {
                            Id = 17,
                            GameId = 3,
                            IsFavorite = false,
                            OwnerGuid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            Rating = 63
                        },
                        new
                        {
                            Id = 18,
                            GameId = 4,
                            IsFavorite = false,
                            OwnerGuid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            Rating = 55
                        },
                        new
                        {
                            Id = 19,
                            GameId = 1,
                            IsFavorite = false,
                            OwnerGuid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            Rating = 59
                        },
                        new
                        {
                            Id = 20,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            Rating = 50
                        },
                        new
                        {
                            Id = 21,
                            GameId = 3,
                            IsFavorite = true,
                            OwnerGuid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 22,
                            GameId = 4,
                            IsFavorite = true,
                            OwnerGuid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 23,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 24,
                            GameId = 6,
                            IsFavorite = true,
                            OwnerGuid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 25,
                            GameId = 3,
                            IsFavorite = true,
                            OwnerGuid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 26,
                            GameId = 4,
                            IsFavorite = false,
                            OwnerGuid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            Rating = 74
                        },
                        new
                        {
                            Id = 27,
                            GameId = 1,
                            IsFavorite = false,
                            OwnerGuid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            Rating = 69
                        },
                        new
                        {
                            Id = 28,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            Rating = 62
                        },
                        new
                        {
                            Id = 29,
                            GameId = 3,
                            IsFavorite = false,
                            OwnerGuid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            Rating = 73
                        },
                        new
                        {
                            Id = 30,
                            GameId = 4,
                            IsFavorite = false,
                            OwnerGuid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            Rating = 64
                        },
                        new
                        {
                            Id = 31,
                            GameId = 1,
                            IsFavorite = true,
                            OwnerGuid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            Rating = 100
                        },
                        new
                        {
                            Id = 32,
                            GameId = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            Rating = 47
                        });
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserInfo", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastSeen")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.ToTable("usersinfo", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6828), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6858), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "vrenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("59cd92da-6b8f-40b3-ab08-a3cb1cab1532"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6862), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6864), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "skyrimenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("a028785e-4dc5-434f-8cd1-828cbc2f1169"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6866), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6866), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "falloutenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("86628830-8827-4a4d-b7ed-fb5fff025f1a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6868), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6869), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "beatsaberenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("5a560c3a-6d49-4442-a372-a51e99a27f74"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6870), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6871), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "forestenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6873), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6874), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "quest2enjoyer"
                        },
                        new
                        {
                            Guid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6876), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6877), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "quest3enjoyer"
                        },
                        new
                        {
                            Guid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6889), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6889), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "questproenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6891), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6892), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "valveindexenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6894), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6895), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "viveenjoyer"
                        },
                        new
                        {
                            Guid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6896), new TimeSpan(0, 3, 0, 0, 0)),
                            LastSeen = new DateTimeOffset(new DateTime(2023, 6, 15, 3, 43, 58, 14, DateTimeKind.Unspecified).AddTicks(6897), new TimeSpan(0, 3, 0, 0, 0)),
                            Username = "vive2enjoyer"
                        });
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserVrSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OwnerGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("VrSetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerGuid");

                    b.HasIndex("VrSetId");

                    b.ToTable("uservrsets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsFavorite = false,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 2,
                            IsFavorite = false,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            VrSetId = 4
                        },
                        new
                        {
                            Id = 3,
                            IsFavorite = false,
                            OwnerGuid = new Guid("9b3365e0-f33e-4f6f-ada3-aa0649c4c6b8"),
                            VrSetId = 6
                        },
                        new
                        {
                            Id = 4,
                            IsFavorite = false,
                            OwnerGuid = new Guid("59cd92da-6b8f-40b3-ab08-a3cb1cab1532"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 5,
                            IsFavorite = false,
                            OwnerGuid = new Guid("a028785e-4dc5-434f-8cd1-828cbc2f1169"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 6,
                            IsFavorite = false,
                            OwnerGuid = new Guid("86628830-8827-4a4d-b7ed-fb5fff025f1a"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 7,
                            IsFavorite = false,
                            OwnerGuid = new Guid("5a560c3a-6d49-4442-a372-a51e99a27f74"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 8,
                            IsFavorite = false,
                            OwnerGuid = new Guid("4f9cf3d6-554d-4662-a896-7b8907688a6a"),
                            VrSetId = 1
                        },
                        new
                        {
                            Id = 9,
                            IsFavorite = false,
                            OwnerGuid = new Guid("fd26857b-9be1-47d3-a518-d834beedf746"),
                            VrSetId = 3
                        },
                        new
                        {
                            Id = 10,
                            IsFavorite = false,
                            OwnerGuid = new Guid("0d33e28a-69e7-400e-87d6-f161935de5c4"),
                            VrSetId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsFavorite = false,
                            OwnerGuid = new Guid("7aea3171-5b7c-48ad-b68d-f191151bbc58"),
                            VrSetId = 4
                        },
                        new
                        {
                            Id = 12,
                            IsFavorite = false,
                            OwnerGuid = new Guid("a380dde9-9ea6-4cd5-8f71-0dd624a2a6f2"),
                            VrSetId = 5
                        },
                        new
                        {
                            Id = 13,
                            IsFavorite = false,
                            OwnerGuid = new Guid("d0f08641-b16c-45a2-a8e0-2af5b33aefd5"),
                            VrSetId = 6
                        });
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.VrSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vrsets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Meta Quest 2"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Meta Quest Pro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Meta Quest 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Valve Index VR Kit"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Htc Vive Pro"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Htc Vive Pro 2"
                        });
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserGame", b =>
                {
                    b.HasOne("ProjectVR.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectVR.DataAccess.Models.UserInfo", "Owner")
                        .WithMany("Games")
                        .HasForeignKey("OwnerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserVrSet", b =>
                {
                    b.HasOne("ProjectVR.DataAccess.Models.UserInfo", "Owner")
                        .WithMany("VrSets")
                        .HasForeignKey("OwnerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectVR.DataAccess.Models.VrSet", "VrSet")
                        .WithMany()
                        .HasForeignKey("VrSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("VrSet");
                });

            modelBuilder.Entity("ProjectVR.DataAccess.Models.UserInfo", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("VrSets");
                });
#pragma warning restore 612, 618
        }
    }
}
